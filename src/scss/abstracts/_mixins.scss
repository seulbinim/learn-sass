@use "sass:map";
@use "sass:string";
@use "sass:math";

@mixin inline-size($value) {
  width: $value;
  inline-size: $value;
}

@mixin block-size($value) {
  height: $value;
  block-size: $value;
}

@mixin size-square($value) {
  @include inline-size($value);
  @include block-size($value);
}

@mixin size($width, $height: null) {
  @include inline-size($width);

  @if $height != null {
    @include block-size($height);
  }
}

@mixin size-square-icon($value) {
  $size: if(math.unit($value) == "px", $value, $value * 1px);

  @include size-square($size);
}

// 미디어쿼리 중단점
$breakpoints: (
  sm: 640,
  md: 768,
  lg: 1024,
  xl: 1280,
  2xl: 1536,
);

// 미디어쿼리 믹스인
@mixin mq($breakpoint) {
  @each $key, $value in $breakpoints {
    @if not map.has-key($breakpoints, $breakpoint) {
      @error '#{$breakpoint}는 유효한 중단점이 아닙니다.(유효한 값:sm, md, lg, xl, 2xl)';
    }
  }

  $viewport: map.get($breakpoints, $breakpoint);
  $query: string.unquote("min-width: #{$viewport}px");

  @media ($query) {
    @content;
  }
}

// Rounded 스타일 믹스인
@mixin rounded($rounded: sm) {
  @if $rounded == sm {
    border-radius: 2px;
  } @else if $rounded == md {
    border-radius: 4px;
  } @else if $rounded == lg {
    border-radius: 6px;
  } @else if $rounded == xl {
    border-radius: 8px;
  } @else if $rounded == full {
    border-radius: 9999px;
  } @else {
    border-radius: $rounded;
  }
}

// Font Size 믹스인
@mixin text-size($size: base) {
  @if $size == xs {
    font-size: $text-xs;
  } @else if $size == sm {
    font-size: $text-sm;
  } @else if $size == base {
    font-size: $text-base;
  } @else if $size == lg {
    font-size: $text-lg;
  } @else if $size == xl {
    font-size: $text-xl;
  } @else if $size == 2xl {
    font-size: $text-2xl;
  } @else if $size == 3xl {
    font-size: $text-3xl;
  } @else if $size == 4xl {
    font-size: $text-4xl;
  } @else if $size == 5xl {
    font-size: $text-5xl;
  } @else if $size == 6xl {
    font-size: $text-6xl;
  } @else if $size == 7xl {
    font-size: $text-7xl;
  } @else if $size == 8xl {
    font-size: $text-8xl;
  } @else if $size == 9xl {
    font-size: $text-9xl;
  } @else {
    font-size: $size;
  }
}

// gap 믹스인
@mixin gap($spacing: base) {
  @if $spacing == xs {
    gap: $spacing-xs;
  } @else if $spacing == sm {
    gap: $spacing-sm;
  } @else if $spacing == base {
    gap: $spacing-base;
  } @else if $spacing == lg {
    gap: $spacing-lg;
  } @else if $spacing == xl {
    gap: $spacing-xl;
  } @else if $spacing == 2xl {
    gap: $spacing-2xl;
  } @else if $spacing == 3xl {
    gap: $spacing-3xl;
  } @else if $spacing == 4xl {
    gap: $spacing-4xl;
  } @else if $spacing == 5xl {
    gap: $spacing-5xl;
  } @else if $spacing == 6xl {
    gap: $spacing-6xl;
  } @else if $spacing == 7xl {
    gap: $spacing-7xl;
  } @else if $spacing == 8xl {
    gap: $spacing-8xl;
  } @else if $spacing == 9xl {
    gap: $spacing-9xl;
  } @else {
    gap: $spacing;
  }
}

// Position 관련 믹스인
@mixin relative-container() {
  position: relative;
}
